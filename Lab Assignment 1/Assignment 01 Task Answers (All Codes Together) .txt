//--TASK--01-------------------------------------------
import java.util.Scanner;
public class task1 {
  public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int sum = 0;
    double count = 0;
    int min = 0;
    int max = 0;
    for (int i = 1; i<=10; i++) {
      System.out.println("Enter Integer "+i);
      int a = sc.nextInt();
      if (a%2==0) {
        continue;}
      if (a<0) {
        continue;}
      sum = sum+a;
      count = count+1;
      if (i==1) {
        min = a;
        max = a;}
      else {
        if (a<min) {
          min = a;}
        else if (a>max) {
          max = a;}}}
    double avg = sum/count;
    if (count==0) {
      System.out.println("No odd positive numbers found");}
    else {
      System.out.println("Sum = "+sum);
      System.out.println("Minimum = "+min);
      System.out.println("Maximum = "+max);
      System.out.println("Average = "+avg);}
  }
}
//
//
//
//
//
//--TASK--02-------------------------------------------
import java.util.Scanner;
public class task2 {
  public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int count = 0;
    System.out.println("Enter 1st Integer");
    int a = sc.nextInt();
    System.out.println("Enter 2nd Integer");
    int b = sc.nextInt();
    if (a>b) {
      int temp = a;
      a = b;
      b = temp;}
    for (int i = a; i<=b; i++) {
      boolean prime = true;
      for (int j = 2; j<i; j++) {
        if (i%j == 0) {
          prime = false;}}
      if (prime == true) {
        count = count+1;}}
    System.out.println("There are "+count+" prime numbers between "+a+" and "+b);
  }
}
//
//
//
//
//
//--TASK--03-------------------------------------------
import java.util.Scanner;
public class task3 {
  public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println("Enter 1st String");
    String a = sc.nextLine();
    System.out.println("Enter 2nd String");
    String b = sc.nextLine();
    String c = a+" "+b;
    int sum = 0;
    for (int i = 0; i<c.length(); i++) {
      int check = c.codePointAt(i);
      if (check>64&&check<91 || check>96&&check<123) {
        sum = sum + check;}}
    System.out.println(c);
    System.out.println(sum);
  }
}
//
//
//
//
//
//--TASK--04-------------------------------------------
import java.util.Scanner;
public class task4 {
  public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println("Enter a string in small letters");
    String a = sc.nextLine();
    for (int i = 0; i<a.length(); i++) {
      int check = a.codePointAt(i)-1;
      if (check == 96) {
        check = 122;}
      System.out.print((char)check);}
  }
}
//
//
//
//
//
//--TASK--05-------------------------------------------
import java.util.Scanner;
public class task5 {
  public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println("Enter the length of the array");
    int length = sc.nextInt();
    int [] array = new int [length];
    int track = 0;
    for (int i = 0; i<length; i++) {
      System.out.println("Enter array element "+(i+1));
      array[i] = sc.nextInt();}
    if (length%2 == 0) {
      track = length/2;}
    else {
      track = (length+1)/2;}
    for (int i = length-1; i>=track; i--) {
      int temp = array [i];
      array [i] = array [length-(i+1)];
      array [length-(i+1)] = temp;}
    for (int i = 0; i<length; i++) {
      System.out.print(array[i]+" ");}
  }
}
//
//
//
//
//
//--TASK--06-------------------------------------------
import java.util.Scanner;
public class task6 {
  public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println("Enter the length of the array N");
    int N = sc.nextInt();
    int [] array = new int [N];
    for (int i = 0; i<N; i++) {
      System.out.println("Enter array element "+(i+1));
      array[i] = sc.nextInt();}
    for (int i = 0; i<N; i++) {
      boolean duplicate = false;
      for (int j = 0; j<i; j++) {
        if (array[i]==array[j]) {
          duplicate = true;}}
      if (duplicate == false) {
        int count = 1;
        for (int j = i+1; j<N; j++) {
          if (array[i]==array[j]) {
            count = count + 1;}}
        System.out.println(array[i]+" - "+count+" times");}}
  }
}
//
//
//
//
//
//--TASK--07-------------------------------------------
import java.util.Scanner;
public class task7 {
  public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println("Enter the length of the array N");
    int N = sc.nextInt();
    int count = 1;
    double [] array = new double [N];
    for (int i = 0; i<N; i++) {
      System.out.println("Enter array element "+(i+1));
      array[i] = sc.nextDouble();}
    for (int i = 1; i<N; i++) {
      boolean duplicate = false;
        if (array[i]==array[i-1]) {
          duplicate = true;}
        if (duplicate == false) {
          count = count + 1;}}
    double [] newarray = new double [count];
    count = 0;
    newarray[0] = array[0];
    for (int i = 1; i<N; i++) {
      boolean duplicate = false;
        if (array[i]==array[i-1]) {
          duplicate = true;}
        if (duplicate == true) {
          count = count + 1;}
        if (duplicate == false) {
          newarray[i-count] = array[i];}}
    System.out.print("New Array: ");
    for (int i = 0; i<newarray.length; i++) {
      System.out.print(newarray[i]+" ");}
    System.out.println();
    System.out.println("Removed elements: "+count);
  }
}
//
//
//
//
//
//--TASK--08-------------------------------------------
import java.util.Scanner;
public class task8 {
  public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println("Enter Row Size");
    int row = sc.nextInt();
    System.out.println("Enter Column Size");
    int col = sc.nextInt();
    int [] [] twoDarray = new int [row] [col];
    int [] oneDarray = new int [row*col];
    for (int i = 0; i<row; i++) {
      for (int j = 0; j<col; j++) {
        System.out.println("Enter Integer for Row "+ i + " & Column " + j);
        twoDarray[i][j] = sc.nextInt();}}
    System.out.println("2D Array: ");
    int count = 0;
    for (int i = 0; i<row; i++) {
      for (int j = 0; j<col; j++) {
        oneDarray [count] =  twoDarray[i][j];
        count = count + 1;
        System.out.print(twoDarray[i][j] + " ");}
      System.out.println();}
    System.out.println("1D Array: ");
    for (int i = 0; i<oneDarray.length; i++) {
      System.out.print(oneDarray[i]+" ");}
  }
}
    
//
//
//
//
//
//--TASK--09-------------------------------------------
public class task9 {
  public static void main (String [] args) {
    int [] [] array = {{1, 0, 0},
                         {0, 1, 0},
                         {0, 0, 1}};
    boolean identity = true;
    for (int i = 0; i<array.length; i++) {
      for (int j = 0; j<array[0].length; j++) {
        if (i==j) {
          if (array[i][j]!=1) {
            identity = false;}}
        if (i!=j) {
          if (array[i][j]!=0) {
            identity = false;}}}}
    if (identity == true) {
      System.out.println("Identity Matrix");}
    if (identity == false) {
      System.out.println("Not an Identity Matrix");}
  }
}
//
//
//
//
//
//--TASK--10-------------------------------------------
import java.util.Scanner;
public class TreasureHunt{
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int [][] arr2D = {{0, 0, 10, 0, -1},
                      {0, -1, 0, 0, -1},
                      {-1, 0, -1, 0, 0},
                      {0, -1, 7, 0, -1},
                      {0, -1, 0, -1, 0}
    };
    System.out.println("Initial Map:");
    printMap(arr2D);
    int row = arr2D.length;
    int col = arr2D[0].length;
    int row_pos = -1, col_pos = -1;
    
    //To-do: find out the position of the player
    for (int i = 0; i<arr2D.length; i++) {
      for (int j = 0; j<arr2D[0].length; j++) {
        if (arr2D[i][j]==7) {
          row_pos = i;
          col_pos = j;}}}
    
    int turns = 5;
    while (turns > 0) {
      int new_row = row_pos, new_col = col_pos;
      System.out.printf("Enter move %d: ",(6-turns));
      String inp = sc.nextLine();
      
      /*To-do: Based on the input update the player position and check if
       * 1. the player fell out of the grid
       * 2. player stepped on mine
       * 3. player found the treasure
       * otheriwse, update the player position */
      if (inp.equals("UP")) {
        new_row = new_row-1;
        new_col = new_col;}
      if (inp.equals("DOWN")) {
        new_row = new_row+1;
        new_col = new_col;}
      if (inp.equals("LEFT")) {
        new_row = new_row;
        new_col = new_col-1;}
      if (inp.equals("RIGHT")) {
        new_row = new_row;
        new_col = new_col+1;}
      if (new_row<0||new_col<0) {
        System.out.println("Player fell outside the playing area. Game over!");
        arr2D[row_pos][col_pos] = 0;
        arr2D[new_row][new_col] = 7;
        System.out.println("Final state:");
        printMap(arr2D);
        break;}
      if (new_row>=arr2D.length||new_col>=arr2D[0].length) {
        System.out.println("Player fell outside the playing area. Game over!");
        break;}
      if (arr2D[new_row][new_col]==10) {
        System.out.println("Treasure found. You win!");
        arr2D[row_pos][col_pos] = 0;
        arr2D[new_row][new_col] = 7;
        System.out.println("Final state:");
        printMap(arr2D);
        break;}
      if (arr2D[new_row][new_col]==-1) {
        System.out.println("Player stepped on mine. Game Over!");
        arr2D[row_pos][col_pos] = 0;
        arr2D[new_row][new_col] = 7;
        System.out.println("Final state:");
        printMap(arr2D);
        break;}
      arr2D[row_pos][col_pos] = 0;
      arr2D[new_row][new_col] = 7;
      row_pos = new_row;
      col_pos = new_col;
      
      
      
      System.out.println("Current state:");
      printMap(arr2D);
      turns--;
    }
    if (turns == 0) {
      System.out.println("Failed to find the treasure.");
    }
  }
  
  public static void printMap(int[][] arr) { 
    // To-do: print the 2D grid
    for (int i = 0; i<arr.length; i++) {
      for (int j = 0; j<arr[0].length; j++) {
        System.out.print(arr[i][j]+" ");}
      System.out.println();}
  }
}